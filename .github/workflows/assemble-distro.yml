# This action is invoked when new changes are pushed to the `main` branch,
# or new tags are created. It then assembles the package distribution
# tarballs, and uploads it to the given tag, or (in the case of pushes to
# `main`) to the tag `latest` (this tag then is also changed to point to
# the new HEAD of `main`)
name: "Assemble the package distribution"

on:
  push:
    branches:
      - main
    tags:
      - v[1-9]+.[0-9]+
      - v[1-9]+.[0-9]+.[0-9]+

concurrency:
  group: assemble-pkgdist
  cancel-in-progress: true

jobs:
  find-modified:
    name: "Check if any packages were modified"
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.find-modified.outputs.modified }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Check if any packages were modified"
        id: find-modified
        run: |
          # if no meta.json file was modified, and the trigger was a push to
          # main, then skip all remaining steps (this situation happens if e.g.
          # the workflow YAML files or README.md are updated)
          modified=$(git diff --name-only --no-renames --diff-filter=M ${{ github.event.before }} -- */meta.json)
          echo "::set-output name=modified::$modified"

  assemble:
    name: "Assemble the package distribution"
    if: ${{ needs.find-modified.outputs.modified != '' }}
    needs: find-modified
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Setup _archives symlink"
        run: mkdir -p ~/_archives && ln -s ~/_archives

      - name: "Cache archives"
        uses: actions/cache@v2
        with:
          path: ~/_archives
          key: archives-${{ hashFiles('**/meta.json') }}
          restore-keys: |
            archives-

      - name: "Install package distribution tools"
        run: |
          git clone https://github.com/gap-system/PackageDistroTools _tools
          pip install -r _tools/requirements.txt

      - name: "Assemble distribution"
        run: _tools/assemble_distro.py

      - name: "Cleanup archives"
        run: _tools/cleanup_archives.py

      # Decide to which tag to update: if the trigger for this job was the
      # creation of a tag `vX.Y.Z`, then upload to that tag.
      # Otherwise upload to tag `latest` and move that tag to our commit
      - name: "Determine target tag"
        run: |
          tag=latest
          if [[ "$GITHUB_REF" = refs/tags/* ]] ; then
            tag=${GITHUB_REF#"refs/tags/"}
          fi
          # Relevant documentation for the next line:
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
          echo "RELEASE_TAG=$tag" >> $GITHUB_ENV

      - name: "Upload files to tag"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          target_commitish: ${{ github.sha }}
          name: "GAP package distribution (${{ env.RELEASE_TAG }})"
          body: |
            Snapshot of the GAP package distribution
          files: |
            _releases/packages.tar.gz
            _releases/packages.tar.gz.sha256
            _releases/package-infos.json.gz
            _releases/package-infos.json.gz.sha256
