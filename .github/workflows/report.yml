name: "Test generation of comparison reports"

on:
  workflow_call:
    inputs:
      which-gap:
        description: 'Which Gap version'
        default: 'master'
        required: false
        type: string

  workflow_dispatch:
    inputs:
      which-gap:
        description: 'Which Gap version'
        default: 'master'
        required: false
        type: string

jobs:
  report:
    name: "Report"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2

      - name: "Set up Python 3.7"
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: "Install package distribution tools"
        run: |
          python -m pip install -r tools/requirements.txt

      - name: "Generate test-status.json"
        id: test-status
        run: python tools/generate_test_status.py ${{ github.repository }} "$GITHUB_RUN_ID" "$GITHUB_SHA" $(git rev-parse --short "$GITHUB_SHA")

      - name: "Download latest report"
        run: |
          ROOT="data/reports"
          DIR_SYM_REL=latest-${{ github.event.inputs.which-gap }}
          DIR_SYM="${ROOT}/${DIR_SYM_REL}"
          wget -O _symlink "https://raw.githubusercontent.com/${{ github.repository }}/${DIR_SYM}"
          DIR=$(cat _symlink)
          DIR=${DIR#/home/runner/work/PackageDistro/PackageDistro/}
          wget -r -np -P ${DIR} "https://raw.githubusercontent.com/${{ github.repository }}/${DIR}/test-status.json"

      - name: "Generate report"
        id: report
        run: |
          # Generate id for test-status
          ROOT="data/reports"
          JSON=$(cat test-status.json)
          HASH=$(jq -r '.hash_short' <<< ${JSON})
          DATE=$(jq -r '.date' <<< ${JSON})
          DATE=$(echo $DATE | sed 's/ /-/g' | cut -d '.' -f1)
          DIR_REL="${{ github.event.inputs.which-gap }}/${DATE}-${HASH}"
          DIR="${ROOT}/${DIR_REL}"
          JSON=$(echo ${JSON} | jq --arg id $DIR_REL '.id |= $id + .')
          # Write test-status
          echo "::set-output name=dir::${DIR}"
          mkdir -p ${DIR}
          jq <<< ${JSON} > "${DIR}/test-status.json"
          # Generate report
          python tools/generate_report.py ${DIR_REL} latest-${{ github.event.inputs.which-gap }}

      - name: "Upload report as artifact"
        uses: actions/upload-artifact@v2
        with:
          name: "report-${{ github.event.inputs.which-gap }}"
          path: "${{ steps.report.outputs.dir }}"
