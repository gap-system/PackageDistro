#
# This workflow is run regularly and scans for package updates, by
# downloading the file specified by the `PackageInfoURL` in each package
# and comparing it against what was there already.
#
name: "Scan for updates"

on:
  workflow_dispatch:  # for debugging
  schedule:
    - cron: '3 * * * *' # Every hours at 3 past

jobs:
  scan-for-updates:
    name: "Scan for package updates"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-names.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      # Cache the package archives we download across runs of this job
      # to speed up things considerably
      - name: "Cache archives"
        uses: actions/cache@v2
        with:
          path: _archives
          key: archives-${{ hashFiles('**/meta.json') }}
          restore-keys: |
            archives-

      # Setup ccache, to speed up repeated compilation of the same binaries
      # (i.e., GAP and the packages)
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false

      - name: "Install GAP"
        uses: gap-actions/setup-gap@v2
        with:
          GAP_BOOTSTRAP: 'minimal'
          GAP_PKGS_TO_CLONE: 'json'
          GAP_PKGS_TO_BUILD: 'json'

      - name: "Install prerequisites for package distribution tools"
        run: python -m pip install -r tools/requirements.txt

      - name: "Scan for updates"
        run: tools/scan_for_updates.py

      # remove archives we don't need anymore; this reduces the size of the caches
      - name: "Cleanup archives"
        run: tools/cleanup_archives.py

      - name: "Upload metadata as artifact for pull request jobs"
        uses: actions/upload-artifact@v2
        with:
          name: metadata
          path: packages

      # The following builds a job matrix; we lunch a copy of the "create-pull-request"
      # for each package whose meta.json was modified by `scan_for_updates.py`
      - name: "Creates jobs for modified packages"
        id: get-names
        run: |
            modified=$(git diff --name-only --no-renames --diff-filter=M -- packages/*/meta.json)

            MATRIX="{\"package\":["
            for PKG in ${modified}; do
              PKG=${PKG%"/meta.json"}
              PKG=${PKG#"packages/"}
              echo "${PKG}"
              MATRIX="${MATRIX}\"${PKG}\","
            done
            MATRIX="${MATRIX}]}"
            echo "::set-output name=matrix::$MATRIX"

  create-pull-request:
    name: "Create pull request for ${{ matrix.package }}"
    if: ${{ needs.scan-for-updates.outputs.matrix != '{"package":[]}' }}
    needs: scan-for-updates
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.scan-for-updates.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - name: "Download metadata from previous job"
        uses: actions/download-artifact@v2
        with:
          name: metadata
          path: packages

      - name: "Extract package version"
        run: |
          pkg_version=$(jq -r '.Version' < packages/${{ matrix.package }}/meta.json)
          echo "PKG_VERSION=$pkg_version" >> $GITHUB_ENV

      # We set up a GitHub App in order to ensure that workflows are run on the PRs
      # created by us, following the instructions here:
      # <https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#authenticating-with-github-app-generated-tokens>
      # The bot can also be set up for personal forks of this repository, for testing
      # and debugging, see <https://github.com/apps/gap-package-distribution-bot>.
      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
          add-paths: packages/${{ matrix.package }}
          commit-message: "[${{ matrix.package }}] Update to ${{ env.PKG_VERSION }}"
          body: ""
          branch: automatic/${{ matrix.package }}
          delete-branch: true
          title: "[${{ matrix.package }}] Update to ${{ env.PKG_VERSION }}"
          labels: |
            automated pr
